#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö RAG —Å–∏—Å—Ç–µ–º—ã –ø–æ client_id
"""

import sys
import shutil
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent / "src"))

from src.document_processor import DocumentProcessor
from src.config import settings


def quick_cleanup(client_id: str):
    """–ë—ã—Å—Ç—Ä–æ –æ—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ client_id"""
    print(f"üßπ –ë—ã—Å—Ç—Ä–∞—è –æ—á–∏—Å—Ç–∫–∞ RAG –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞: {client_id}")
    print("=" * 40)

    processor = DocumentProcessor(client_id=client_id)

    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞
    client_docs_path = settings.DOCUMENTS_DIR / client_id
    client_faiss_path = settings.FAISS_INDEX_DIR / "clients" / client_id  # –î–æ–±–∞–≤–ª–µ–Ω–æ "clients"

    if not client_docs_path.exists() and not client_faiss_path.exists():
        print(f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {client_id}")
        print(f"üîç –ò—Å–∫–∞–ª–∏ –≤:")
        print(f"   üìÅ –î–æ–∫—É–º–µ–Ω—Ç—ã: {client_docs_path}")
        print(f"   üìÅ FAISS –∏–Ω–¥–µ–∫—Å: {client_faiss_path}")
        return

    # –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω–¥–µ–∫—Å –∫–ª–∏–µ–Ω—Ç–∞
    try:
        stats = processor.get_index_statistics()
    except Exception:
        stats = {}

    downloaded_files = list(client_docs_path.glob("**/*")) if client_docs_path.exists() else []
    faiss_files = list(client_faiss_path.glob("*")) if client_faiss_path.exists() else []

    print(f"üìä –ß—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {client_id}:")
    if stats.get('status') == 'ready':
        print(f"   üìÑ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å–µ: {stats.get('sources_count', 0)}")
        print(f"   üß© –§—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å–µ: {stats.get('total_chunks', 0)}")

    print(f"   üíæ –°–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {len(downloaded_files)}")
    print(f"   üóÑÔ∏è –§–∞–π–ª–æ–≤ –∏–Ω–¥–µ–∫—Å–∞: {len(faiss_files)}")

    if len(downloaded_files) == 0 and len(faiss_files) == 0 and stats.get('total_chunks', 0) == 0:
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —É–∂–µ —É–¥–∞–ª–µ–Ω—ã –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
        return

    docs_size = sum(f.stat().st_size for f in downloaded_files if f.is_file()) / 1024 / 1024
    faiss_size = sum(f.stat().st_size for f in faiss_files if f.is_file()) / 1024 / 1024
    print(f"   üíæ –û—Å–≤–æ–±–æ–¥–∏—Ç—Å—è: ~{docs_size + faiss_size:.1f} MB")

    print(f"\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ {client_id}!")
    print(f"   - –í—Å–µ —Å–∫–∞—á–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞")
    print(f"   - –í–µ—Å—å FAISS –∏–Ω–¥–µ–∫—Å –∫–ª–∏–µ–Ω—Ç–∞")
    print(f"   - –í—Å–µ –≤–µ–∫—Ç–æ—Ä—ã –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞")

    confirm = input(f"\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): ")

    if confirm.lower() == 'y':
        print(f"\nüóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞ {client_id}...")

        # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é, –ø–æ—Ç–æ–º –æ—á–∏—â–∞–µ–º –∏–Ω–¥–µ–∫—Å
        removed_files = 0
        if client_docs_path.exists():
            try:
                shutil.rmtree(client_docs_path)
                removed_files = len(downloaded_files)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {removed_files}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã: {e}")

        removed_index_files = 0
        if client_faiss_path.exists():
            try:
                shutil.rmtree(client_faiss_path)
                removed_index_files = len(faiss_files)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –∏–Ω–¥–µ–∫—Å–∞: {removed_index_files}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–Ω–¥–µ–∫—Å: {e}")

        # –¢–µ–ø–µ—Ä—å –æ—á–∏—â–∞–µ–º –∏–Ω–¥–µ–∫—Å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ (–µ—Å–ª–∏ –ø–∞–ø–∫–∞ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        try:
            if client_faiss_path.exists():
                processor.clear_all_data()
                print("‚úÖ FAISS –∏–Ω–¥–µ–∫—Å –æ—á–∏—â–µ–Ω –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ –∏–Ω–¥–µ–∫—Å–∞: {e}")
            # –≠—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —Ñ–∞–π–ª—ã —É–∂–µ —É–¥–∞–ª–µ–Ω—ã

        print(f"\nüéâ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞ {client_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üîÑ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.")

    else:
        print("‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python quick_cleanup.py <client_id>")
        sys.exit(1)
    client_id = sys.argv[1]

    try:
        quick_cleanup(client_id)
    except KeyboardInterrupt:
        print("\nüëã –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")